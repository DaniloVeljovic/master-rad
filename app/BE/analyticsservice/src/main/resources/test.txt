        double[] doubles = new double[]{
                sensorMeasurementDTO.getLightIntensity(),
                sensorMeasurementDTO.getGroundMoisture(),
                sensorMeasurementDTO.getWindIntensity(),
                sensorMeasurementDTO.getSoilHumidity()};

/* Load a data set */
		//Dataset data = FileHandler.loadDataset(new File("devtools/data/iris.data"), 4, ",");
		/* Contruct a KNN classifier that uses 5 neighbors to make a
		 *decision. */
		//Classifier knn = new KNearestNeighbors(5);
		//knn.buildClassifier(data);
		/* Load a dataset */
		File file = new File("C:\\Users\\danil\\Desktop\\Master_studije\\Master rad\\Projekat\\BE\\analyticsservice\\src\\main\\resources\\iris.data");
		Dataset data = FileHandler.loadDataset(file, 4, ",");
		/*
		 * Create a new instance of the KMeans algorithm, with no options
		 * specified. By default this will generate 4 clusters.
		 */
		//Clusterer km = new KMeans();
		/*
		 * Cluster the data, it will be returned as an array of data sets, with
		 * each dataset representing a cluster
		 */
		//Dataset[] clusters = km.cluster(data);
		//System.out.println("Cluster count: " + clusters.length);

		Classifier knn = new KNearestNeighbors(5);
		knn.buildClassifier(data);

		/*
		 * Load a data set for evaluation, this can be a different one, but we
		 * will use the same one.
		 */
		Dataset dataForClassification = FileHandler.loadDataset(new File("C:\\Users\\danil\\Desktop\\Master_studije\\Master rad\\Projekat\\BE\\analyticsservice\\src\\main\\resources\\iris.data"), 4, ",");
		/* Counters for correct and wrong predictions. */
		int correct = 0, wrong = 0;
		/* Classify all instances and check with the correct class values */
		for (Instance inst : dataForClassification) {
			Object predictedClassValue = knn.classify(inst);
			Object realClassValue = inst.classValue();
			if (predictedClassValue.equals(realClassValue))
				correct++;
			else
				wrong++;
		}
		System.out.println("Correct predictions  " + correct);
		System.out.println("Wrong predictions " + wrong);